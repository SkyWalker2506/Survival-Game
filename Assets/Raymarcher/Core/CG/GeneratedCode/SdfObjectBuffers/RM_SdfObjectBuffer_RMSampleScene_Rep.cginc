// This code has been generated by the RMConvertor. Please do not attempt any changes


// SDF methods (sdf object sources & modifiers)
half3 xRepeatModifier(half3 p, half spacingx, half scrollx)
{
p.x += scrollx * _Time.y;
float sp = spacingx * 0.5;
p.x = fmod(p.x + sp, spacingx) - sp;
p.x = fmod(p.x - sp, spacingx) + sp;

return p;
}

half3 yRepeatModifier(half3 p, half spacingy, half scrolly)
{
p.y += scrolly * _Time.y;
float sp = spacingy * 0.5;
p.y = fmod(p.y + sp, spacingy) - sp;
p.y = fmod(p.y - sp, spacingy) + sp;

return p;
}

half3 zRepeatModifier(half3 p, half spacingz, half scrollz)
{
p.z += scrollz * _Time.y;
float sp = spacingz * 0.5;
p.z = fmod(p.z + sp, spacingz) - sp;
p.z = fmod(p.z - sp, spacingz) + sp;

return p;
}

#ifndef Rot
#define Rot(a) float2x2(cos(a),-sin(a),sin(a),cos(a))
#endif
half3 TwistModifier(half3 p, half3 twistTile, half3 twistMultiplier, half3 twistScroll)
{

float3 m0 = lerp(0.0,0.05,twistMultiplier.y);
float3 m1 = lerp(0.0,0.05,twistMultiplier.x);
float3 m2 = lerp(0.0,0.05,twistMultiplier.z);

p.xz += mul(p.xz+5.0, Rot(p.y*twistTile.y+_Time.y*twistScroll.y)) * m0;
p.yz += mul(p.yz+5.0, Rot(p.x*twistTile.x+_Time.y*twistScroll.x)) * m1;
p.xy += mul(p.xy+5.0, Rot(p.z*twistTile.z+_Time.y*twistScroll.z)) * m2;

return p;
}

half2 GetCubeFrameSdf(half3 p, half color, half cubeRoundness, half3 cubeSize, half frameSize)
{
half result;
float cYframe = length(max(abs(p) - (abs(cubeSize) + half3(0, 1, 0) - abs(frameSize) - cubeRoundness), 0.0)) - cubeRoundness;
float cZframe = length(max(abs(p) - (abs(cubeSize) + half3(0, 0, 1) - abs(frameSize) - cubeRoundness), 0.0)) - cubeRoundness;
float cXframe = length(max(abs(p) - (abs(cubeSize) + half3(1, 0, 0) - abs(frameSize) - cubeRoundness), 0.0)) - cubeRoundness;
result = max(-min(cYframe, min(cZframe, cXframe)), length(max(abs(p) - abs(cubeSize) + cubeRoundness, 0.0)) - cubeRoundness);
return half2 (result,color);
}


// SDF object variables
struct SdfInstancesContainer
{
half4 modelData;
};
StructuredBuffer<SdfInstancesContainer> SdfInstances;
uniform half spacingx0;
uniform half scrollx0;
uniform half spacingy0;
uniform half scrolly0;
uniform half spacingz0;
uniform half scrollz0;
uniform half3 twistTile0;
uniform half3 twistMultiplier0;
uniform half3 twistScroll0;
uniform half cubeRoundness0;
uniform half3 cubeSize0;
uniform half frameSize0;

half2 SdfObjectBuffer(in half3 p)
{
// SDF object declarations
    half2 obj0 = half2 (GetCubeFrameSdf(TwistModifier(zRepeatModifier(yRepeatModifier(xRepeatModifier(RM_TRANS(p,SdfInstances[0].modelData.xyz),spacingx0,scrollx0),spacingy0,scrolly0),spacingz0,scrollz0),twistTile0,twistMultiplier0,twistScroll0),SdfInstances[0].modelData.w,cubeRoundness0,cubeSize0,frameSize0));
// SDF modifier groups

    return obj0;
}
