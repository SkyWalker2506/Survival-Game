// This code has been generated by the RMConvertor. Please do not attempt any changes


// SDF methods (sdf object sources & modifiers)
half2 FragmentModifier(half sdf, float3 p, half color, half4 fragmentTiling, half3 fragmentScroll)
{
float frg = (sin(fragmentTiling.x * (p.x + _Time.y * fragmentScroll.x))
* sin(fragmentTiling.y * (p.y + _Time.y * fragmentScroll.y))
* sin(fragmentTiling.z * (p.z + _Time.y * fragmentScroll.z))) * fragmentTiling.w;
sdf += frg;
return half2 (sdf,color);
}

half2 GetSphereSdf(half3 p, half color, half2 sphereSdfData)
{
half result;
p.y -= clamp(p.y, 0.0, sphereSdfData.y);
result = length(p) - sphereSdfData.x;
return half2 (result,color);
}

half2 GetMetaBallsSdf(half3 p, half color, half4 metaBallTransform, half2 metaBallFloating)
{
half result;

float t = _Time.y * metaBallFloating.x;
float ball0 = length(p + half3(-0.2 - sin(t / 1.5) * 0.2, metaBallFloating.y, 0.2 + cos(t / 0.5) * 0.2) * sin(t / 0.89) * metaBallTransform.z) - metaBallTransform.x - ((1.8 + cos(t)) * metaBallTransform.w);
float ball1 = length(p + half3(0.2 + cos(t / 0.49) * 0.2, metaBallFloating.y, -0.2 + sin(t / 1.24) * 0.2) * cos(t / 1.32) * metaBallTransform.z) - metaBallTransform.x - ((1.5 + sin(t / 2.8)) * metaBallTransform.w);
float ball2 = length(p + half3(0.1 + cos(t / 2.19) * 0.1, metaBallFloating.y, 0.1 + sin(t / 2.0) * 0.1) * cos(t / 2.0) * metaBallTransform.z) - metaBallTransform.x - ((1.2 + sin(t / 3.4)) * metaBallTransform.w);
float metaballs = SmoothUnion1(ball2, SmoothUnion1(ball0, ball1, metaBallTransform.y), metaBallTransform.y);
result = metaballs;
return half2 (result,color);
}


// SDF object variables
half4 modelData[3];
uniform half4 fragmentTiling0;
uniform half3 fragmentScroll0;
uniform half2 sphereSdfData0;
uniform half4 fragmentTiling1;
uniform half3 fragmentScroll1;
uniform half2 sphereSdfData1;
uniform half4 metaBallTransform2;
uniform half2 metaBallFloating2;

half2 SdfObjectBuffer(in half3 p)
{
// SDF object declarations
    half2 obj0 = half2 (GetSphereSdf(RM_TRANS(p,modelData[0].xyz),modelData[0].w,sphereSdfData0));
    obj0 = FragmentModifier(obj0.x,p,obj0.y,fragmentTiling0,fragmentScroll0);
    half2 obj1 = half2 (GetSphereSdf(RM_TRANS(p,modelData[1].xyz),modelData[1].w,sphereSdfData1));
    obj1 = FragmentModifier(obj1.x,p,obj1.y,fragmentTiling1,fragmentScroll1);
    half2 obj2 = half2 (GetMetaBallsSdf(RM_TRANS(p,modelData[2].xyz),modelData[2].w,metaBallTransform2,metaBallFloating2));
// SDF modifier groups

// Smooth Unions
    half2 objGroup0 = GroupSmoothUnion(obj0,obj1,RaymarcherGlobalSdfObjectSmoothness);
    half2 objGroup1 = GroupSmoothUnion(objGroup0,obj2,RaymarcherGlobalSdfObjectSmoothness);
    return objGroup1;
}
